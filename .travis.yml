language: python

python:
    - 3.6

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false


env:
    global:
        # The following versions are the 'default' for tests, unless
        # overridden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable
        - SETUP_CMD='test'
        - PIP_DEPENDENCIES=''
        - CONDA_DEPENDENCIES='scipy matplotlib'

        # For headless testing of code that imports PyPlot:
        - MPLBACKEND=Agg
    matrix:
        # Make sure that egg_info works without dependencies
        - SETUP_CMD='egg_info'

matrix:
    include:
        # do the actual tests.
        # Do a coverage test in Python 3.
        - python: 3.6
          env: SETUP_CMD='test --coverage'

        # Check accelerated math version too
        - python: 3.6
          env: SETUP_CMD='test --coverage' PIP_DEPENDENCIES='numexpr'

        # Check for Sphinx doc build errors
        - python: 3.6
          env: SETUP_CMD='build_sphinx'
               CONDA_DEPENDENCIES='scipy matplotlib nbsphinx pandoc'
               PIP_DEPENDENCIES='sphinx_rtd_theme stsci_rtd_theme sphinx-automodapi'


        # Try Astropy development version
        - python: 3.6
          env: SETUP_CMD='test' ASTROPY_VERSION=development

        # Try Astropy & numpy minimum supported versions
        - python: 3.5
          env: ASTROPY_VERSION=1.3 NUMPY_VERSION=1.10 SETUP_CMD='test'

        # Try older numpy versions
        - python: 3.6
          env: NUMPY_VERSION=1.12
        - python: 3.5
          env: NUMPY_VERSION=1.11

install:

    # We now use the ci-helpers package to set up our testing environment.
    # This is done by using Miniconda and then using conda and pip to install
    # dependencies. Which dependencies are installed using conda and pip is
    # determined by the CONDA_DEPENDENCIES and PIP_DEPENDENCIES variables,
    # which should be space-delimited lists of package names. See the README
    # in https://github.com/astropy/ci-helpers for information about the full
    # list of environment variables that can be used to customize your
    # environment. In some cases, ci-helpers may not offer enough flexibility
    # in how to install a package, in which case you can have additional
    # commands in the install: section below.

    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

    # As described above, using ci-helpers, you should be able to set up an
    # environment with dependencies installed using conda and pip, but in some
    # cases this may not provide enough flexibility in how to install a
    # specific dependency (and it will not be able to install non-Python
    # dependencies). Therefore, you can also include commands below (as
    # well as at the start of the install section or in the before_install
    # section if they are needed before setting up conda) to install any
    # other dependencies.

script:
   - python setup.py $SETUP_CMD

after_success:
    # coveralls.io integration
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='poppy/tests/coveragerc'; fi

notifications:
  email:
    - mperrin@stsci.edu
